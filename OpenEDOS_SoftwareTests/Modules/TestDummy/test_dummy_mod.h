/**
 * Created with the OpenEDOS SystemBuilder v0.1.
 * Created for the OpenEDOS Core v0.2.1.
 * 
 * This file is autogenerated. Sections inside USER CODE BEGIN and USER CODE END
 * will be left untouched when rerunning the code generation. Happy coding!
 * 
 * @file test_dummy_mod.h
 * @author Samuel Ardaya-Lieb
 * @version 0.0.1
 * @date 2024-07-14
 * 
 * copyright (c) 2024 Samuel Ardaya-Lieb, MIT license
 */

/* USER CODE FILE HEADER BEGIN */

/* USER CODE FILE HEADER END */

#ifndef TEST_DUMMY_MOD_H
#define TEST_DUMMY_MOD_H

#include "defines.h"
#include "test_dummy_intf.h"

/* Includes, typedefs, globals, etc. */
/* USER CODE MODULE GLOBALS BEGIN */

/* USER CODE MODULE GLOBALS END */

//~~~~~~~~~~~~~~~~~~~~~~~~ Module definition ~~~~~~~~~~~~~~~~~~~~~~~~//

typedef struct module_TestDummy_s {
	/* The connection to the kernel. */
	Kernel_t *Kernel;

	/* Module data. */
	/* USER CODE MODULE DATA BEGIN */

	/* USER CODE MODULE DATA END */
} module_TestDummy_t;

//~~~~~~~~~~~~~~~~~~~~~~~~~~ Init prototype ~~~~~~~~~~~~~~~~~~~~~~~~~//

/**
 * @brief Initialize the module TestDummy.
 * 
 * This function registers the request handlers of the module
 * and connects the module to the kernel. It then calls the specific
 * init function of the module.
 * 
 * @param TestDummy A pointer to the module to be initialized.
 * 
 * @param Kernel A pointer to the kernel to be connected.
 * 
 * @return Error_t An error is returned if
 * - initializing the module results in an error.
 * Otherwise ERROR_NONE is returned.
 */
Error_t initModule_TestDummy(
	module_TestDummy_t *TestDummy,
	Kernel_t *Kernel);

//~~~~~~~~~~~~~~~~~~~~~~~~~~ User prototypes ~~~~~~~~~~~~~~~~~~~~~~~~//

/* USER CODE MODULE PROTOTYPES BEGIN */
Error_t subscribeRequest_1(void);
void unsubscribeRequest_1(void);
Error_t sendRequest_1(void);

Error_t subscribeRequest_2(void);
void unsubscribeRequest_2(void);
Error_t sendRequest_2(void);
/* USER CODE MODULE PROTOTYPES END */

#endif//TEST_DUMMY_MOD_H