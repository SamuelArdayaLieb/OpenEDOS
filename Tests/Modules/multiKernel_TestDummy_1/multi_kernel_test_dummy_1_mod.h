/**
 * @note This file was autogenerated with OpenEDOS v2.0.
 * Sections inside USER CODE BEGIN and USER CODE END will be left untouched 
 * when rerunning the code generation. Happy coding!
 * 
 * @file multi_kernel_test_dummy_1_mod.h
 * @author Samu
 */

/* USER CODE COPYRIGHT NOTICE BEGIN */
/**
 * @version 2.0
 * 
 * OpenEDOS, (c) 2022-2024 Samuel Ardaya-Lieb, MIT License
 * 
 * https://github.com/SamuelArdayaLieb/OpenEDOS
 */
/* USER CODE COPYRIGHT NOTICE END */

/* USER CODE FILE HEADER BEGIN */

/* USER CODE FILE HEADER END */

#ifndef MULTI_KERNEL_TEST_DUMMY_1_MOD_H
#define MULTI_KERNEL_TEST_DUMMY_1_MOD_H

#include "oe_defines.h"
#include "multi_kernel_test_dummy_1_intf.h"

/* Includes, typedefs, globals, etc. */
/* USER CODE MODULE GLOBALS BEGIN */

/* USER CODE MODULE GLOBALS END */

//~~~~~~~~~~~~~~~~~~~~~~~~ Module definition ~~~~~~~~~~~~~~~~~~~~~~~~//

typedef struct module_multiKernel_TestDummy_1_s {
    /* The connection to the kernel. */
    OE_Kernel_t *Kernel;

    /* Module data. */
	/* USER CODE MODULE DATA BEGIN */

	/* USER CODE MODULE DATA END */

} module_multiKernel_TestDummy_1_t;

//~~~~~~~~~~~~~~~~~~~~~~~~~~ Init prototype ~~~~~~~~~~~~~~~~~~~~~~~~~//

/**
 * @brief Initialize the module multiKernel_TestDummy_1.
 * 
 * This function registers the request handlers of the module
 * and connects the module to the kernel. It then calls 
 * the specific init function of the module.
 * 
 * @param multiKernel_TestDummy_1 A pointer to the module to be initialized.
 * 
 * @param Args A pointer to the init params for the module.
 * 
 * @param Kernel A pointer to the kernel to be connected.
 * 
 * @return OE_Error_t An error is returned if
 * - initializing the module results in an error.
 * Otherwise OE_ERROR_NONE is returned.
 */
OE_Error_t initModule_multiKernel_TestDummy_1(
    module_multiKernel_TestDummy_1_t *multiKernel_TestDummy_1,
    void *Args,
    OE_Kernel_t *Kernel);

//~~~~~~~~~~~~~~~~~~~~~~~~~~ User prototypes ~~~~~~~~~~~~~~~~~~~~~~~~//

/* USER CODE MODULE PROTOTYPES BEGIN */

/* USER CODE MODULE PROTOTYPES END */

#endif // MULTI_KERNEL_TEST_DUMMY_1_MOD_H