/**
 * @note This file was autogenerated with OpenEDOS v2.1.
 * Sections inside USER CODE BEGIN and USER CODE END will be left untouched 
 * when rerunning the code generation. Happy coding!
 * 
 * @file oe_core_intf.h
 * @author Samuel Ardaya-Lieb
 */

/* USER CODE COPYRIGHT NOTICE BEGIN */
/**
 * @version 2.1
 * 
 * OpenEDOS, (c) 2022-2024 Samuel Ardaya-Lieb, MIT License
 * 
 * https://github.com/SamuelArdayaLieb/OpenEDOS
 */
/* USER CODE COPYRIGHT NOTICE END */

/* USER CODE FILE INTRODUCTION BEGIN */

/* USER CODE FILE INTRODUCTION END */

#ifndef OE_CORE_INTF_H
#define OE_CORE_INTF_H

#include "oe_defines.h"

/* Includes, defines, typedefs, etc. */
/* USER CODE INTERFACE HEADER BEGIN */

/* USER CODE INTERFACE HEADER END */

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Requests ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//

/* Kernel_Start */

/**
 * @brief Send a message to request: Kernel_Start.
 * 
 * This request is sent when a kernel enters its main routine.
 * Response: No
 * 
 * @param KernelID The ID of the kernel that enters its main routine.
 * @return OE_Error_t An error is returned if
 * - processing the message results in an error.
 * Otherwise OE_ERROR_NONE is returned.
 */
OE_Error_t req_Kernel_Start(
	OE_KernelID_t KernelID);

struct requestArgs_Kernel_Start_s {
	OE_KernelID_t KernelID;
};

#endif // OE_CORE_INTF_H