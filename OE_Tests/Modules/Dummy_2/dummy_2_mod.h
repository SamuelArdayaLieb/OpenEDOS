/**
 * @note This file was autogenerated with OpenEDOS v2.1.
 * Sections inside USER CODE BEGIN and USER CODE END will be left untouched 
 * when rerunning the code generation. Happy coding!
 * 
 * @file dummy_2_mod.h
 * @author Samuel Ardaya-Lieb
 */

/* USER CODE COPYRIGHT NOTICE BEGIN */
/**
 * OpenEDOS, (c) 2022-2025 Samuel Ardaya-Lieb, MIT License
 * 
 * https://github.com/SamuelArdayaLieb/OpenEDOS
 */
/* USER CODE COPYRIGHT NOTICE END */

/* USER CODE FILE INTRODUCTION BEGIN */
/* USER CODE FILE INTRODUCTION END */

#ifndef DUMMY_2_MOD_H
#define DUMMY_2_MOD_H

#include "oe_defines.h"
#include "dummy_2_intf.h"
#include "oe_core_intf.h"
#include "test_intf.h"
#include "dummy_0_intf.h"
#include "dummy_1_intf.h"

/* Includes, typedefs, globals, etc. */
/* USER CODE MODULE GLOBALS BEGIN */
#include "../../oe_test.h"
/* USER CODE MODULE GLOBALS END */

//~~~~~~~~~~~~~~~~~~~~~~~~ Module definition ~~~~~~~~~~~~~~~~~~~~~~~~//

typedef struct module_Dummy_2_s {
    /* The connection to the kernel. */
    OE_Kernel_t *Kernel;

    /* Module data. */
    /* USER CODE MODULE DATA BEGIN */
    uint8_t param;
    int responses;
    CuSuite *suite;
    CuTest *tc;
    /* USER CODE MODULE DATA END */

} module_Dummy_2_t;

//~~~~~~~~~~~~~~~~~~~~~~~~~~ Init prototype ~~~~~~~~~~~~~~~~~~~~~~~~~//

/**
 * @brief Initialize the module Dummy_2.
 * 
 * This function registers the request handlers of the module
 * and connects the module to the kernel. It then calls 
 * the specific init function of the module.
 * 
 * @param Dummy_2 A pointer to the module to be initialized.
 * @param Args A pointer to the init params for the module.
 * @param Kernel A pointer to the kernel to be connected.
 * @return OE_Error_t An error is returned if
 * - initializing the module results in an error.
 * Otherwise OE_ERROR_NONE is returned.
 */
OE_Error_t initModule_Dummy_2(
    module_Dummy_2_t *Dummy_2,
    void *Args,
    OE_Kernel_t *Kernel);

//~~~~~~~~~~~~~~~~~~~~~~~~~~ User prototypes ~~~~~~~~~~~~~~~~~~~~~~~~//

/* USER CODE MODULE PROTOTYPES BEGIN */
/* USER CODE MODULE PROTOTYPES END */

#endif // DUMMY_2_MOD_H