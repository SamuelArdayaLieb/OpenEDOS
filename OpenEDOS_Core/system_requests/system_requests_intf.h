/**
 * Created with the OpenEDOS SystemBuilder v0.1.
 * Created for the OpenEDOS Core v0.2.1.
 * 
 * This file is autogenerated. Sections inside USER CODE BEGIN and USER CODE END
 * will be left untouched when rerunning the code generation. Happy coding!
 * 
 * @file system_requests_intf.h
 * @author Samuel Ardaya-Lieb
 * @version 
 * @date 2024-07-17
 * 
 * 
 */

/* USER CODE FILE HEADER BEGIN */

/* USER CODE FILE HEADER END */

#ifndef SYSTEM_REQUESTS_INTF_H
#define SYSTEM_REQUESTS_INTF_H

#include "defines.h"

/* Includes, defines, typedefs, etc. */
/* USER CODE INTERFACE HEADER BEGIN */

/* USER CODE INTERFACE HEADER END */

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Requests ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//

/* Kernel_Start */

/**
 * @brief Send a message to request: Kernel_Start.
 * 
 * This request is sent when a kernel enters its main routine.
 * Response: No
 * 
 * @param KernelID The ID of the kernel that enters its main routine.
 * @return Error_t An error is returned if
 * - processing the message results in an error.
 * Otherwise ERROR_NONE is returned.
 */
Error_t req_Kernel_Start(
	KernelID_t KernelID);

struct requestArgs_Kernel_Start_s {
	KernelID_t KernelID;
};

/* Kernel_Stop */

/**
 * @brief Send a message to request: Kernel_Stop.
 * 
 * This request stops a kernel. The main routine of that kernel will return 
 * once all currently queued messages have been processed.
 * Response: No
 * 
 * @param KernelID The ID of the kernel to be stopped.
 * @return Error_t An error is returned if
 * - processing the message results in an error.
 * Otherwise ERROR_NONE is returned.
 */
Error_t req_Kernel_Stop(
	KernelID_t KernelID);

struct requestArgs_Kernel_Stop_s {
	KernelID_t KernelID;
};

#endif//SYSTEM_REQUESTS_INTF_H